type Activity {
  archiveContentType: String
  archiveFilename: String
  archiveSize: Int
  createdAt: ISO8601DateTime!
  deletedAt: ISO8601DateTime
  description: String
  evidenceText: String
  finishedAt: ISO8601DateTime
  id: ID!
  justify: String
  playbook: Playbook!
  portalUser: PortalUser
  projectId: Int
  reference: String
  startedAt: ISO8601DateTime
  status: String
  title: String
  updatedAt: ISO8601DateTime!
}

type AllocatedProjects {
  client: String
  dueDate: ISO8601DateTime!
  estimatedDays: String!
  estimatedHours: String!
  hoursOrDays: String!
  id: ID!
  label: String!
  pid: String!
  plannedStartedAt: ISO8601DateTime
  projectStatus: String
  projectTypeId: Int!
}

type AnalysisHistory {
  activeAllocation: Boolean
  changeTime: ISO8601DateTime
  comment: String
  createdAt: ISO8601DateTime!
  deliveryDate: ISO8601DateTime
  editedComment: Boolean
  environmentInvaded: Boolean
  environmentInvadedComment: String
  estimateId: Int
  estimatedDays: Int
  estimatedHours: Int
  estimatedMinutes: Int
  id: ID!
  pausedComment: String
  portalUserEmail: String
  portalUserName: String
  projectCycleId: Int
  projectId: Int
  sacId: String
  startedAt: ISO8601DateTime
  status: String
  updatedAt: ISO8601DateTime!
  versionTag: String
  vulnCount: Int
  vulnerabilityIds: String
}

type AnalysisStatusType {
  createdAt: ISO8601DateTime
  id: ID!
  isInitial: Boolean!
  label: String!
}

type AnalysisStatusTypeCollection {
  collection: [AnalysisStatusType!]!
  metadata: CollectionMetadata!
}

type AnalysisVulnerabilitiesCount {
  critical: Int
  high: Int
  low: Int
  medium: Int
  notification: Int
  total: Int
  totalWithNotification: Int
}

type AnalystAllocations {
  allocatedHours: Int
  createdAt: ISO8601DateTime!
  id: ID!
  portalUser: PortalUser
  updatedAt: ISO8601DateTime!
}

type Asset {
  architectureType: String
  assetType: String
  assetsTagList: String
  audience: String
  companyId: Int
  createdAt: ISO8601DateTime!
  criticity: String
  dataClassification: String
  description: String
  developmentModel: String
  developmentTeam: String
  environment: String
  id: ID!
  lifeCycle: String
  name: String
  projects: [Project!]
  scanType: String
  updatedAt: ISO8601DateTime!
  url: String
}

enum AssetArch {
  """
  Agile
  """
  agile

  """
  Micro-services
  """
  microservices

  """
  Monolithic
  """
  monolithic

  """
  Serverless
  """
  serverless

  """
  none
  """
  none
}

enum AssetAudience {
  """
  External
  """
  external

  """
  Internal
  """
  internal

  """
  Internal and External
  """
  internal_and_external

  """
  None
  """
  none
}

type AssetCollection {
  collection: [Asset!]!
  metadata: CollectionMetadata!
}

enum AssetDevelopmentModel {
  """
  Agile
  """
  agile

  """
  None
  """
  none

  """
  Third_party
  """
  third_party

  """
  Waterfall
  """
  waterfall
}

enum AssetDevelopmentTeam {
  """
  External
  """
  external

  """
  Internal
  """
  internal

  """
  Internal and External
  """
  internal_and_external

  """
  None
  """
  none
}

enum AssetLifeCycle {
  """
  Production
  """
  production

  """
  Homologation
  """
  homologation

  """
  Certification
  """
  certification

  """
  discontinued
  """
  discontinued

  """
  None
  """
  none
}

enum AssetScan {
  """
  Server
  """
  Server

  """
  DAST
  """
  DAST

  """
  SAST
  """
  SAST

  """
  Container
  """
  Container

  """
  None
  """
  None
}

enum AssetSeverity {
  """
  High
  """
  high

  """
  Critical
  """
  critical

  """
  Low
  """
  low

  """
  None
  """
  none
}

enum AssetTypeList {
  """
  None
  """
  none

  """
  Client-server
  """
  client_server

  """
  api
  """
  api

  """
  Progressive Web App
  """
  progressive_web_app

  """
  web
  """
  web

  """
  Native Mobile
  """
  native_mobile

  """
  Hybrid Mobile
  """
  hybrid_mobile

  """
  Database
  """
  database

  """
  DMZ
  """
  dmz

  """
  Legacy
  """
  legacy

  """
  Cluster
  """
  cluster

  """
  Node
  """
  node
}

type Attachment {
  archiveContentType: String
  archiveFilename: String
  archiveId: String
  archiveSize: Int
  createdAt: ISO8601DateTime!
  deletedAt: ISO8601DateTime
  description: String
  id: ID!
  portalUser: PortalUser
  project: Project
  scope: Attachment
  updatedAt: ISO8601DateTime!
}

type AttachmentCollection {
  collection: [Attachment!]!
  metadata: CollectionMetadata!
}

type CollectionMetadata {
  currentPage: Int!
  limitValue: Int!
  totalCount: Int!
  totalPages: Int!
}

type Company {
  active: Int
  address: String
  bountyCritical: Int
  bountyHigh: Int
  bountyLow: Int
  bountyMedium: Int
  brandContentType: String
  brandFilename: String
  brandId: String
  brandSize: String
  cnpj: String
  contactEmail: String
  contactName: String
  contractedTime: Int
  createdAt: ISO8601DateTime!
  description: String
  expirationAt: ISO8601DateTime
  headquarterId: [Int!]
  id: ID!
  label: String!
  notifyOpenVulns: Boolean
  notifyOpenVulnsCritical: Int
  notifyOpenVulnsHigh: Int
  notifyOpenVulnsLow: Int
  notifyOpenVulnsMedium: Int
  sendEmailNotification: Boolean
  sid: String!
  tags: [String!]
  titleColor: String
  updatedAt: ISO8601DateTime!
  visibleDeploysReview: Boolean
}

type CompanyCollection {
  collection: [Company!]!
  metadata: CollectionMetadata!
}

input CompanySearch {
  """
  Exact search for a label
  """
  labelEq: String

  """
  Search for the content of a label
  """
  labelCont: String

  """
  Search for the content of an email
  """
  contactEmailCont: String

  """
  Exact search for an email
  """
  contactEmailEq: String
}

type Contact {
  assetId: ID
  attachment: String
  attachmentContentType: String
  attachmentFilename: String
  attachmentId: String
  attachmentSize: Int
  contractId: ID
  createdAt: ISO8601DateTime!
  email: String!
  id: ID!
  name: String!
  phone: String!
  planId: ID
  role: String!
  scopeId: ID
  updatedAt: ISO8601DateTime!
}

input ContactTypeInput {
  id: ID
  contractId: ID
  name: String!
  email: String!
  phone: String!
  role: String!
  attachment: Upload
}

type Contract {
  attachment: String
  attachmentContentType: String
  attachmentFilename: String
  attachmentId: String
  attachmentSize: Int
  client: Company
  companyId: Int
  consumedServices: ContractConsumedServices
  contacts: [Contact!]
  createdAt: ISO8601DateTime!
  customMetadata: ContractCollection
  daysConnecttivityBlock: Int
  description: String
  educationId: Int
  educationSecret: String
  finishedAt: ISO8601Date
  finishedContracts: Int
  id: ID!
  newContractModel: Boolean
  noEndDate: Boolean
  onPremiseKey: String
  openedContracts: Int
  professionalService: Int
  resourcesCount: Int
  scopeId: Int
  serviceKind: String
  serviceKinds: [ContractService!]
  startedAt: ISO8601Date
  status: String
  totalContracts: Int
  trialDays: Int
  updatedAt: ISO8601DateTime!
}

type ContractCollection {
  collection: [Contract!]!
  metadata: ContractMeta!
}

type ContractConsume {
  consumedAmount: Int
  consumedPercentage: Int
  licenceAmountType: String
  totalAmount: Int
  updatedAt: ISO8601DateTime
}

type ContractConsumedServices {
  consumedAnnualLeave: ContractConsume
  consumedApplicationSecurityTesting: ContractConsume
  consumedEducationModule: ContractConsume
  consumedGapAnalysis: ContractConsume
  consumedHardwareIotPenTest: ContractConsume
  consumedManagedService: ContractConsume
  consumedManualCodeReview: ContractConsume
  consumedMobilePenTest: ContractConsume
  consumedNetworkPenTest: ContractConsume
  consumedScanAndFindingReview: ContractConsume
  consumedThreatModeling: ContractConsume
  consumedWebPenTest: ContractConsume
}

type ContractMeta {
  currentPage: Int!
  finishedContracts: Int
  limitValue: Int!
  openedContracts: Int
  totalContracts: Int
  totalCount: Int
  totalPages: Int!
}

input ContractSearch {
  descriptionEq: String
  descriptionCont: String
  scopeLabelCont: String
  status: String
}

type ContractService {
  contractId: ID!
  createdAt: ISO8601DateTime!
  durationDays: Int
  id: ID!
  licenceAmount: Int
  licenceAmountType: String
  serviceKindId: ID!
  serviceKindLabel: String
  updatedAt: ISO8601DateTime!
}

"""
Autogenerated input type of CreateAsset
"""
input CreateAssetInput {
  assetType: AssetTypeList
  assetsTagList: [String!]
  audience: AssetAudience
  architectureType: AssetArch
  criticity: AssetSeverity
  companyId: Int!
  convisoResponsible: Int
  dataClassification: String
  description: String
  developmentModel: AssetDevelopmentModel
  developmentTeam: AssetDevelopmentTeam
  environmentList: [String!]
  integrationIds: [String!]
  lifeCycle: AssetLifeCycle
  name: String!
  projectIds: [Int!]
  scanType: AssetScan
  tecnologyList: [String!]
  teamIds: [String!]
  url: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateAsset
"""
type CreateAssetPayload {
  asset: Asset

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
}

"""
Autogenerated input type of CreateAttachment
"""
input CreateAttachmentInput {
  description: String
  projectId: Int
  companyId: Int!
  allowedPortalUserIds: [Int!]
  archive: Upload!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateAttachment
"""
type CreateAttachmentPayload {
  attachment: Attachment

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
}

"""
Autogenerated input type of CreateCodeReviewVulnerability
"""
input CreateCodeReviewVulnerabilityInput {
  projectId: Int!
  description: String!
  evidenceArchives: [Upload!]!
  files: [String!]!

  """
  Possible options [low, medium or high]
  """
  impact: String!
  impactResume: String!
  inputData: String!
  invaded: Boolean!

  """
  Required only if invaded true
  """
  invadedEnvironmentDescription: String
  outputData: String!

  """
  Possible options [low, medium or high]
  """
  probability: String!
  vulnerabilityTemplateId: Int!
  vulnerableCode: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateCodeReviewVulnerability
"""
type CreateCodeReviewVulnerabilityPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  vulnerability: Vulnerability
}

"""
Autogenerated input type of CreateContract
"""
input CreateContractInput {
  """
  Company Id. Set it to indicate the contract owner
  """
  companyId: Int!

  """
  Contract description. You must describe important points
  """
  description: String!

  """
  End date. Set it to indicate the end date
  """
  finishedAt: ISO8601Date

  """
  Start date. Set it to indicate the initial date
  """
  startedAt: ISO8601Date!

  """
  Contract has no end date
  """
  noEndDate: Boolean!

  """
  List of services
  """
  services: [ServiceTypeInput!]!

  """
  List of contacts
  """
  contacts: [ContactTypeInput!]
  attachment: Upload
  educationSecret: String
  educationId: Int

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateContract
"""
type CreateContractPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  contract: Contract
  errors: [String!]
}

"""
Autogenerated input type of CreateCredential
"""
input CreateCredentialInput {
  companyId: Int!
  description: String
  environment: String!
  name: String!
  profile: String!
  password: String!
  user: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateCredential
"""
type CreateCredentialPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  credential: Credential
  errors: [String!]
}

"""
Autogenerated input type of CreateEstimate
"""
input CreateEstimateInput {
  companyId: Int!
  subject: String!
  project: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateEstimate
"""
type CreateEstimatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  estimate: Project
}

"""
Autogenerated input type of CreateFindingDast
"""
input CreateFindingDastInput {
  flowProjectId: String!

  """
  List of issues
  """
  issues: [IssueTypeDastInput!]!

  """
  Required if you have a 3rd party scan engine.
  """
  source: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateFindingDast
"""
type CreateFindingDastPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  message: String
}

"""
Autogenerated input type of CreateFindingSast
"""
input CreateFindingSastInput {
  codeVersion: [String!]
  flowDeployId: String
  flowProjectId: String!

  """
  List of issues
  """
  issues: [IssueTypeSastInput!]!

  """
  Required if you have a 3rd party scan engine.
  """
  source: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateFindingSast
"""
type CreateFindingSastPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  message: String
}

"""
Autogenerated input type of CreateIntegrationMappedFields
"""
input CreateIntegrationMappedFieldsInput {
  """
  Mapped Fields
  """
  mappedFields: [IntegrationMappedFieldsInput!]!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateIntegrationMappedFields
"""
type CreateIntegrationMappedFieldsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
}

"""
Autogenerated input type of CreateNotification
"""
input CreateNotificationInput {
  projectId: Int!
  vulnerabilityTemplateId: Int!
  description: String!
  evidenceArchives: [Upload!]!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateNotification
"""
type CreateNotificationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  notification: Notification
}

"""
Autogenerated input type of CreateOtherVulnerability
"""
input CreateOtherVulnerabilityInput {
  projectId: Int!
  description: String!
  evidenceArchives: [Upload!]!
  host: String!

  """
  Possible options [low, medium or high]
  """
  impact: String!
  impactResume: String!
  invaded: Boolean!

  """
  Required only if invaded true
  """
  invadedEnvironmentDescription: String

  """
  Possible options [low, medium or high]
  """
  probability: String!
  protocol: String!
  steps: String!
  vector: String!
  vulnerabilityTemplateId: Int!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateOtherVulnerability
"""
type CreateOtherVulnerabilityPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  vulnerability: Vulnerability
}

"""
Autogenerated input type of CreateProject
"""
input CreateProjectInput {
  assetsIds: [Int!]
  companyId: Int!
  startDate: ISO8601Date!
  connectivity: String
  credentialsIds: [Int!]
  estimatedHours: String
  label: String!
  negativeScope: String
  goal: String!
  playbooksIds: [Int!]!
  scope: String!
  students: Int
  tags: [String!]
  teamsIds: [Int!]
  typeId: Int!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateProject
"""
type CreateProjectPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  project: Project
}

"""
Autogenerated input type of CreateSamlIntegration
"""
input CreateSamlIntegrationInput {
  samlIdpSsoTarget: String!
  samlIdpEntityId: String!
  samlIdpCert: String!
  authorizedDomains: [String!]!
  scopeId: Int!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateSamlIntegration
"""
type CreateSamlIntegrationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  integration: SamlIntegration!
}

"""
Autogenerated input type of CreateWebVulnerability
"""
input CreateWebVulnerabilityInput {
  projectId: Int!
  description: String!
  evidenceArchives: [Upload!]!

  """
  Possible options [low, medium or high]
  """
  impact: String!
  impactResume: String!
  invaded: Boolean!

  """
  Required only if invaded true
  """
  invadedEnvironmentDescription: String

  """
  Possible options [low, medium or high]
  """
  probability: String!
  vulnerabilityTemplateId: Int!

  """
  Possible options [GET, POST, DELETE, PUT, PATCH, HEAD, CONNECT, OPTIONS, TRACE]
  """
  webMethod: String!
  webParameters: String!
  webProtocol: String!
  webRequest: String!
  webResponse: String!
  webSteps: String!
  webUrl: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateWebVulnerability
"""
type CreateWebVulnerabilityPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  vulnerability: Vulnerability
}

type Credential {
  createdAt: ISO8601DateTime!
  description: String
  environment: String
  id: ID!
  name: String
  password: String
  profile: String
  updatedAt: ISO8601DateTime!
  user: String
}

type CredentialCollection {
  collection: [Credential!]!
  metadata: CollectionMetadata!
}

"""
Autogenerated input type of DeleteContact
"""
input DeleteContactInput {
  id: Int!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DeleteContact
"""
type DeleteContactPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  msg: String
}

"""
Autogenerated input type of DeleteContract
"""
input DeleteContractInput {
  id: Int!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DeleteContract
"""
type DeleteContractPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  msg: String
}

"""
Autogenerated input type of DeleteMappedField
"""
input DeleteMappedFieldInput {
  id: Int!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DeleteMappedField
"""
type DeleteMappedFieldPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  msg: String
}

"""
Autogenerated input type of DeleteSamlIntegration
"""
input DeleteSamlIntegrationInput {
  id: Int!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of DeleteSamlIntegration
"""
type DeleteSamlIntegrationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  msg: String
}

type Deploy {
  changedApproximately: String
  changedLines: Int
  companyId: Int
  companyName: String
  createdAt: ISO8601DateTime!
  currentCommit: String
  currentTag: String
  deployUrlCompare: String
  discardReason: String
  discardedId: Int
  gauntletDiffUrl: String
  gauntletScanId: Int
  gauntletSourceCodeId: Int
  gitDiff: String
  id: ID!
  languages: String
  newLines: Int
  previousCommit: String
  previousTag: String
  projectId: Int
  removedLines: Int
  reviewed: Boolean
  reviewedAt: ISO8601DateTime
  reviewer: PortalUser
  status: String
  totalProjectLines: Int
  updatedAt: ISO8601DateTime!
}

type DeployCollection {
  collection: [Deploy!]!
  metadata: CollectionMetadata!
}

type Evidence {
  archiveContentType: String
  archiveFilename: String
  createdAt: ISO8601DateTime!
  evidenceText: String
  id: ID!
  updatedAt: ISO8601DateTime!
}

type Finding {
  affectedIp: String
  affectedLineNumbers: [Int!]
  affectedSourceFile: String
  applicationId: Int
  applicationName: String
  businessSeverity: String
  category: String
  commitReference: String
  component: String
  cves: [String!]
  descriptionEn: String
  evaluationStatus: String
  flowDeployId: String
  flowProjectId: String
  hashIssue: String
  id: ID
  integrationName: String
  originalSeverity: String
  rawOutputFromScanner: String
  recommendationsEn: String
  references: [String!]
  scanId: Int
  scanType: String
  shortCommitRef: String
  source: String
  sourceFile: String
  tags: [String!]
  technicalSeverity: String
  titleEn: String
  version: String
}

type FindingCollection {
  collection: [Finding!]!
  metadata: CollectionMetadata!
}

input FindingSearch {
  """
  Application id
  """
  applicationId: Int

  """
  Commit reference
  """
  commitReference: String

  """
  Deploy id
  """
  deployId: Int

  """
  Status
  """
  evaluationStatus: String

  """
  Integration name
  """
  integrationName: String

  """
  Project id
  """
  projectId: Int

  """
  Scan id
  """
  scanId: Int

  """
  Scan type
  """
  scanType: String

  """
  Source
  """
  source: String

  """
  Source file
  """
  sourceFile: String

  """
  Severity label
  """
  technicalSeverity: String

  """
  Title
  """
  title: String
}

type History {
  affectedComponentHistoryId: Int
  comment: String
  commitmentAt: ISO8601DateTime
  createdAt: ISO8601DateTime!
  fixedByDeployId: Int
  id: ID!
  portalUserId: Int
  status: String
  updatedAt: ISO8601DateTime!
  vulnerabilityId: Int
}

type IntegrationExternalProject {
  asset: Asset
  customMetadata: IntegrationExternalProjectCollection
  extraKey: String
  id: ID!
  integrationId: Int
  issueType: String
  outsideKey: String
  project: Project
  projectExternalId: Int
  projectExternalLabel: String
  projectId: Int
  scopeIntegrationId: Int
}

type IntegrationExternalProjectCollection {
  collection: [IntegrationExternalProject!]!
  metadata: IntegrationExternalProjectMeta!
}

type IntegrationExternalProjectMeta {
  currentPage: Int!
  limitValue: Int!
  totalCount: Int
  totalPages: Int!
}

input IntegrationMappedFieldsInput {
  id: ID
  assetOption: [Int!]!
  jiraAssetName: String!
  jiraAssetKey: String!
  jiraProjectTypeOption: String
  scopeIntegrationId: Int!
  projectExternalId: Int!
  mapFields: [MappedFieldIntegrationType!]!
}

"""
An ISO 8601-encoded date
"""
scalar ISO8601Date

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

input IssueTypeDastInput {
  affectedIp: String!
  affectedPort: String!
  affectedHost: String!
  affectedUrl: String!
  affectedProtocol: String!
  affectedParameter: String!
  affectedHeaders: String!
  affectedQueryString: String!
  businessSeverity: String!
  description: String!

  """
  Issue evidence Base64 encoded.
  """
  evidence: String!
  hashIssue: String!
  originalSeverity: String!
  references: [String!]!
  reporter: String
  technicalSeverity: String!
  title: String!
}

input IssueTypeSastInput {
  """
  Business severity. Possible values: Low, Medium, High and Critical
  """
  businessSeverity: String!

  """
  Issue description
  """
  description: String!

  """
  Evidence text, encoded with base64
  """
  evidence: String!

  """
  File path
  """
  filename: String!

  """
  The hash identifier, composed using issue data like title, line number, file
  path and code snippet -
  b887dfsssaa48aasseb89bd1ea2ca2cc29b5899700b21c437158175ccc2c7d3ab2b4c67af
  """
  hashIssue: String!

  """
  Affected line number
  """
  line: String!

  """
  Original severity. Possible values: Low, Medium, High and Critical
  """
  originalSeverity: String!
  recommendationsEn: String

  """
  Some issue reference
  """
  references: [String!]!
  reporter: String

  """
  Technical severity. Possible values: Low, Medium, High and Critical
  """
  technicalSeverity: String!

  """
  Issue title
  """
  title: String!
}

input MappedFieldIntegrationType {
  status: String!
  statusJira: String!
}

type MappedFields {
  externalValue: String
  flowValue: String
  id: ID!
  integrationId: Int
  projectExternalKey: IntegrationExternalProject
  projectExternalKeyId: Int
}

type MappedFieldsCollection {
  collection: [MappedFields!]!
  metadata: CollectionMetadata!
}

type Mutation {
  """
  Create an Asset
  """
  createAsset(
    """
    Parameters for CreateAsset
    """
    input: CreateAssetInput!
  ): CreateAssetPayload

  """
  Create an Attachment from the company
  """
  createAttachment(
    """
    Parameters for CreateAttachment
    """
    input: CreateAttachmentInput!
  ): CreateAttachmentPayload

  """
  Create a Code Review Vulnerability
  """
  createCodeReviewVulnerability(
    """
    Parameters for CreateCodeReviewVulnerability
    """
    input: CreateCodeReviewVulnerabilityInput!
  ): CreateCodeReviewVulnerabilityPayload

  """
  Create a Contract
  """
  createContract(
    """
    Parameters for CreateContract
    """
    input: CreateContractInput!
  ): CreateContractPayload

  """
  Create a Credential
  """
  createCredential(
    """
    Parameters for CreateCredential
    """
    input: CreateCredentialInput!
  ): CreateCredentialPayload

  """
  Create Estimate
  """
  createEstimate(
    """
    Parameters for CreateEstimate
    """
    input: CreateEstimateInput!
  ): CreateEstimatePayload

  """
  Create a Finding Dast
  """
  createFindingDast(
    """
    Parameters for CreateFindingDast
    """
    input: CreateFindingDastInput!
  ): CreateFindingDastPayload

  """
  Create a Finding Sast
  """
  createFindingSast(
    """
    Parameters for CreateFindingSast
    """
    input: CreateFindingSastInput!
  ): CreateFindingSastPayload

  """
  Create a Integration mapped fields
  """
  createIntegrationMappedFields(
    """
    Parameters for CreateIntegrationMappedFields
    """
    input: CreateIntegrationMappedFieldsInput!
  ): CreateIntegrationMappedFieldsPayload

  """
  Create a Notification
  """
  createNotification(
    """
    Parameters for CreateNotification
    """
    input: CreateNotificationInput!
  ): CreateNotificationPayload

  """
  Create a Other Vulnerability
  """
  createOtherVulnerability(
    """
    Parameters for CreateOtherVulnerability
    """
    input: CreateOtherVulnerabilityInput!
  ): CreateOtherVulnerabilityPayload

  """
  Create Project
  """
  createProject(
    """
    Parameters for CreateProject
    """
    input: CreateProjectInput!
  ): CreateProjectPayload

  """
  Create Saml Integration
  """
  createSamlIntegration(
    """
    Parameters for CreateSamlIntegration
    """
    input: CreateSamlIntegrationInput!
  ): CreateSamlIntegrationPayload

  """
  Create a Web Vulnerability
  """
  createWebVulnerability(
    """
    Parameters for CreateWebVulnerability
    """
    input: CreateWebVulnerabilityInput!
  ): CreateWebVulnerabilityPayload

  """
  Delete a Contact
  """
  deleteContact(
    """
    Parameters for DeleteContact
    """
    input: DeleteContactInput!
  ): DeleteContactPayload

  """
  Delete a Contract
  """
  deleteContract(
    """
    Parameters for DeleteContract
    """
    input: DeleteContractInput!
  ): DeleteContractPayload

  """
  Delete a Mapped Field
  """
  deleteMappedField(
    """
    Parameters for DeleteMappedField
    """
    input: DeleteMappedFieldInput!
  ): DeleteMappedFieldPayload

  """
  Delete a Integration
  """
  deleteSamlIntegration(
    """
    Parameters for DeleteSamlIntegration
    """
    input: DeleteSamlIntegrationInput!
  ): DeleteSamlIntegrationPayload

  """
  Update activity status to finish
  """
  updateActivityStatusToFinish(
    """
    Parameters for UpdateActivityStatusToFinish
    """
    input: UpdateActivityStatusToFinishInput!
  ): UpdateActivityStatusToFinishPayload

  """
  Update activity status to not apply
  """
  updateActivityStatusToNotApply(
    """
    Parameters for UpdateActivityStatusToNotApply
    """
    input: UpdateActivityStatusToNotApplyInput!
  ): UpdateActivityStatusToNotApplyPayload

  """
  Update activity status to restart
  """
  updateActivityStatusToRestart(
    """
    Parameters for UpdateActivityStatusToRestart
    """
    input: UpdateActivityStatusToRestartInput!
  ): UpdateActivityStatusToRestartPayload

  """
  Update activity status to start
  """
  updateActivityStatusToStart(
    """
    Parameters for UpdateActivityStatusToStart
    """
    input: UpdateActivityStatusToStartInput!
  ): UpdateActivityStatusToStartPayload

  """
  Update a Contract
  """
  updateContract(
    """
    Parameters for UpdateContract
    """
    input: UpdateContractInput!
  ): UpdateContractPayload

  """
  Update a Integration mapped fields
  """
  updateIntegrationMappedFields(
    """
    Parameters for UpdateIntegrationMappedFields
    """
    input: UpdateIntegrationMappedFieldsInput!
  ): UpdateIntegrationMappedFieldsPayload

  """
  Update a Occurrence
  """
  updateOccurrence(
    """
    Parameters for UpdateOccurrence
    """
    input: UpdateOccurrenceInput!
  ): UpdateOccurrencePayload

  """
  Update Project
  """
  updateProject(
    """
    Parameters for UpdateProject
    """
    input: UpdateProjectInput!
  ): UpdateProjectPayload

  """
  Update Saml Integration
  """
  updateSamlIntegration(
    """
    Parameters for UpdateSamlIntegration
    """
    input: UpdateSamlIntegrationInput!
  ): UpdateSamlIntegrationPayload
}

input NewEvidence {
  """
  Textual evidence
  """
  evidenceText: String

  """
  Archive evidence
  """
  archive: Upload
}

type Notification {
  author: PortalUser
  companyId: Int
  companyName: String
  createdAt: ISO8601DateTime!
  description: String
  evidences: [Evidence!]!
  history: [History!]!
  id: ID!
  notificationStatus: String
  projectId: Int
  updatedAt: ISO8601DateTime!
  vulnerabilityTemplate: VulnerabilityTemplate!
}

type NotificationCollection {
  collection: [Notification!]!
  metadata: CollectionMetadata!
}

type OccurrenceMeta {
  currentPage: Int!
  limitValue: Int!
  totalCount: Int!
  totalCritical: Int
  totalHigh: Int
  totalLow: Int
  totalMedium: Int
  totalNotifications: Int
  totalPages: Int!
}

enum OrderOccurrencesParams {
  """
  order by affected_component_id
  """
  affected_component_id

  """
  order by author_id
  """
  author_id

  """
  order by client_impact
  """
  client_impact

  """
  order by close_comments
  """
  close_comments

  """
  order by code_review_code
  """
  code_review_code

  """
  order by code_review_input_data
  """
  code_review_input_data

  """
  order by code_review_output_data
  """
  code_review_output_data

  """
  order by code_review_vector
  """
  code_review_vector

  """
  order by commitment_at
  """
  commitment_at

  """
  order by created_at
  """
  created_at

  """
  order by criticity
  """
  criticity

  """
  order by deploy_id
  """
  deploy_id

  """
  order by external_vid
  """
  external_vid

  """
  order by failure_type
  """
  failure_type

  """
  order by gauntlet_issue_id
  """
  gauntlet_issue_id

  """
  order by github_alert_id
  """
  github_alert_id

  """
  order by id
  """
  id

  """
  order by impact
  """
  impact

  """
  order by impact_resume
  """
  impact_resume

  """
  order by integration_name
  """
  integration_name

  """
  order by invaded
  """
  invaded

  """
  order by invaded_environment_description
  """
  invaded_environment_description

  """
  order by legacy_id
  """
  legacy_id

  """
  order by notification_title
  """
  notification_title

  """
  order by notification_type
  """
  notification_type

  """
  order by others_host
  """
  others_host

  """
  order by others_protocol
  """
  others_protocol

  """
  order by others_steps
  """
  others_steps

  """
  order by others_vector
  """
  others_vector

  """
  order by probability
  """
  probability

  """
  order by project_id
  """
  project_id

  """
  order by updated_at
  """
  updated_at

  """
  order by vid
  """
  vid

  """
  order by vulnerability_model_id
  """
  vulnerability_model_id

  """
  order by vulnerability_status
  """
  vulnerability_status

  """
  order by web_method
  """
  web_method

  """
  order by web_parameters
  """
  web_parameters

  """
  order by web_protocol
  """
  web_protocol

  """
  order by web_request
  """
  web_request

  """
  order by web_response
  """
  web_response

  """
  order by web_steps
  """
  web_steps

  """
  order by web_url
  """
  web_url
}

enum OrderParams {
  """
  descending order
  """
  DESC

  """
  ascending order
  """
  ASC
}

type Playbook {
  checklistTypeId: Int
  companyId: Int
  createdAt: ISO8601DateTime
  deletedAt: ISO8601DateTime
  description: String
  id: ID!
  label: String!
  updatedAt: ISO8601DateTime
}

type PlaybookCollection {
  collection: [Playbook!]!
  metadata: CollectionMetadata!
}

input PlaybookSearch {
  """
  Exact search for a label
  """
  labelEq: String

  """
  Search for the content of a label
  """
  labelCont: String

  """
  Search for the content of an description
  """
  descriptionEq: String

  """
  Exact search for an description
  """
  descriptionCont: String
}

type PortalUser {
  allocatedAnalyses: [Project!]
  analyst: Boolean
  blocked: Boolean
  dashboardOnly: Boolean
  email: String!
  endWorkTime: String
  financial: Boolean
  githubUser: String
  id: ID!
  jiraUser: String
  name: String
  oper: Boolean
  pendingProjectComments: [ProjectComment!]
  phone: String
  reviewedDeploys(
    initialDate: ISO8601DateTime!
    finishDate: ISO8601DateTime!
  ): [Deploy!]
  slackUser: String
  sshPublicKey: String
  submittedVulnerabilities: [Vulnerability!]
}

type Project {
  activities: [Activity!]
  allocatedAnalyst: [AnalystAllocations!]
  apiCode: String
  apiResponseReview: String
  assets: [Asset!]
  closeComments: Boolean
  companyId: Int!
  connectivity: String
  continuousDelivery: Boolean
  contractedHours: Int
  createdAt: ISO8601DateTime
  credentials: [Credential!]
  customMetadata: ProjectCollection
  deploySendFrequency: Int
  dueDate: ISO8601DateTime
  endDate: ISO8601DateTime
  environmentInvaded: Boolean
  estimatedDays: String
  estimatedHours: String
  executiveSummary: String
  firstVulnerabilityIdentified: Vulnerability
  freeRetest: Boolean
  hasOpenRetest: Boolean
  history: [AnalysisHistory!]
  hoursOrDays: String
  id: ID!
  integrationDeploy: Boolean
  inviteToken: String
  isOpen: Boolean!
  isPublic: Boolean
  label: String!
  language: String
  mainRecommendations: String
  microserviceFolder: String
  negativeScope: String
  notificationList: String
  notifications: [Notification!]
  objective: String
  pid: String
  plannedStartedAt: ISO8601DateTime
  playbookFinishedAt: ISO8601DateTime
  playbookStartedAt: ISO8601DateTime
  playbooks: [Playbook!]
  projectType: ProjectType!
  receiveDeploys: Boolean
  repositoryUrl: String
  resultFiles: [ResultFiles!]
  sacCode: String
  sacProjectId: Int
  scope: String
  secretId: String
  sshPublicKey: String
  startDate: ISO8601DateTime!
  status: String
  students: Int
  subScopeId: Int
  tags: [Tag!]
  teams: [Team!]
  totalAnalysisLines: Int
  totalChangedLines: Int
  totalNewLines: Int
  totalPublishedVulnerabilities: Int
  totalRemovedLines: Int
  type: String!
  updatedAt: ISO8601DateTime
  userWithAccess: [PortalUser!]
  userableId: Int
  userableType: String
  vulnerabilities: [Vulnerability!]
  vulnerabilitiesCount: AnalysisVulnerabilitiesCount
  vulnerabilitiesCountByStatus: ProjectVulnerabilitiesStatusCount
  waiting: Boolean!
}

type ProjectCollection {
  collection: [Project!]!
  metadata: ProjectMeta!
}

type ProjectComment {
  author: String!
  createdAt: ISO8601DateTime!
  deletedAt: ISO8601DateTime
  id: ID!
  pid: String!
  portalUserId: Int
  projectId: Int
  updatedAt: ISO8601DateTime!
}

input ProjectExternalKeySearch {
  scopeIntegrationId: Int
  mappingSearchFilter: String
}

type ProjectMeta {
  currentPage: Int!
  engagementStatuses: [AnalysisStatusType!]
  engagementTypes: [ProjectType!]
  limitValue: Int!
  tags: [String!]
  teams: [Team!]
  total: Int
  totalAnalysis: Int
  totalCount: Int!
  totalDone: Int
  totalEstimate: Int
  totalFixing: Int
  totalPages: Int!
  totalPaused: Int
  totalPlanned: Int
  totalVulnsCount: Int
  totalVulnsCritical: Int
  totalVulnsHigh: Int
  totalVulnsLow: Int
  totalVulnsMedium: Int
  totalVulnsNotification: Int
}

input ProjectSearch {
  """
  Verify if is Continuous Code Review
  """
  continuousDeliveryEq: Boolean

  """
  Search in created_at dates with greater than or equal
  """
  createdAtGteq: ISO8601DateTime

  """
  Search in created_at dates with less than or equal
  """
  createdAtLteq: ISO8601DateTime
  endDateCont: ISO8601DateTime
  endDateEq: ISO8601DateTime
  endDate: ISO8601DateTime
  labelCont: String
  labelEq: String
  idEq: Int
  projectStatusLabelCont: String

  """
  Search Status
  """
  projectStatusLabelEq: String
  projectTypeLabelCont: String

  """
  Search Type
  """
  projectTypeLabelEq: String
  startDate: ISO8601DateTime
  startDateEq: ISO8601DateTime
  startDateCont: ISO8601DateTime
  tagNameEq: String
  scopeLabelCont: String
  scopeIdEq: Int
  search: String
  engagementTypes: [Int!]
  engagementStatuses: [Int!]
  tags: [String!]
  teams: [Int!]
  continuousDelivery: String
}

type ProjectsQueue {
  allocatedProjects: [AllocatedProjects!]
  portalUser: PortalUser
  scheduledProjects: [ScheduledProjects!]
}

type ProjectsQueueCollection {
  collection: [ProjectsQueue!]!
  metadata: CollectionMetadata!
}

type ProjectType {
  code: String!
  createdAt: ISO8601DateTime
  defaultDuration: Int
  description: String
  id: ID!
  label: String!
}

type ProjectTypeCollection {
  collection: [ProjectType!]!
  metadata: CollectionMetadata!
}

input ProjectTypeSearch {
  """
  Exact search for a label
  """
  labelEq: String

  """
  Search for the content of a label
  """
  labelCont: String

  """
  Search for the content of an description
  """
  descriptionEq: String

  """
  Exact search for an description
  """
  descriptionCont: String

  """
  Ids is one of these values
  """
  idIn: [Int!]
}

type ProjectVulnerabilitiesStatusCount {
  falsePositive: Int
  fixAccepted: Int
  fixRefused: Int
  identified: Int
  inProgress: Int
  riskAccepted: Int
  total: Int
  unpublished: Int
  waitingReview: Int
  waitingValidation: Int
}

type Query {
  """
  Returns all projects that the analyst is allocated
  """
  allocatedProjects(page: Int, limit: Int): ProjectCollection!

  """
  Returns all assets the user has access
  """
  assets(id: ID!, page: Int, limit: Int): AssetCollection!

  """
  return an attachment from a company
  """
  attachment(id: ID!): Attachment

  """
  return the attachments from a company
  """
  attachments(scopeId: ID!, page: Int, limit: Int): AttachmentCollection

  """
  Returns all companies the user has access
  """
  companies(page: Int, limit: Int, params: CompanySearch): CompanyCollection

  """
  Return the company the user has access
  """
  company(id: ID!): Company

  """
  Return contact from a contract
  """
  contact(id: ID!): Contact

  """
  Return the contract the user has access
  """
  contract(id: ID!): Contract

  """
  Returns all contracts
  """
  contracts(
    page: Int
    limit: Int
    sortBy: String
    descending: Boolean
    params: ContractSearch
  ): ContractCollection!

  """
  Returns all credentials by company id
  """
  credentials(id: ID!, page: Int, limit: Int): CredentialCollection!

  """
  Returns deploys by company id
  """
  deploysByCompanyId(
    id: ID!
    initialDate: ISO8601DateTime!
    finishDate: ISO8601DateTime!
    page: Int
    limit: Int
  ): DeployCollection!

  """
  Returns deploys by project id
  """
  deploysByProjectId(
    id: ID!
    initialDate: ISO8601DateTime!
    finishDate: ISO8601DateTime!
    page: Int
    limit: Int
  ): DeployCollection!

  """
  Returns findings
  """
  findings(limit: Int, page: Int, params: FindingSearch): FindingCollection!

  """
  Returns all findings by commit
  """
  findingsByCommit(commit: String!, page: Int, limit: Int): FindingCollection!

  """
  Returns all mapped integration by company
  """
  integrationExternalAssociation(
    page: Int
    limit: Int

    """
    column name to order. Ex: label
    """
    sortBy: String

    """
    0 => DESC or 1 => ASC
    """
    descending: Boolean
    params: ProjectExternalKeySearch
  ): IntegrationExternalProjectCollection!

  """
  Returns all mapped fields by integration
  """
  mappedFields(outsideKey: String!): MappedFieldsCollection

  """
  Returns all notifications the user has access
  """
  notifications(page: Int, limit: Int): NotificationCollection

  """
  Returns all pending deploys
  """
  pendingDeploys(page: Int, limit: Int): DeployCollection!

  """
  Return all playbooks the company
  """
  playbooks(
    id: ID!
    page: Int
    limit: Int
    params: PlaybookSearch
  ): PlaybookCollection

  """
  Return user profile by email
  """
  portalUserProfile(email: String!): PortalUser

  """
  Return the project if the user has access
  """
  project(id: ID!): Project

  """
  Returns all project statuses
  """
  projectStatuses(page: Int, limit: Int): AnalysisStatusTypeCollection!

  """
  Returns all project types
  """
  projectTypes(
    page: Int
    limit: Int
    params: ProjectTypeSearch
  ): ProjectTypeCollection!

  """
  Returns all projects the user has access
  """
  projects(
    page: Int
    limit: Int
    params: ProjectSearch

    """
    column name to order. Ex: label
    """
    sortBy: String

    """
    0 => DESC or 1 => ASC
    """
    descending: Boolean
  ): ProjectCollection!

  """
  Return the projecs queue by user
  """
  projectsQueue: ProjectsQueueCollection

  """
  Return Saml integration
  """
  samlIntegration(scopeId: Int!): SamlIntegration!

  """
  Return the service type
  """
  serviceType(id: ID!): ServiceType

  """
  Return all service types
  """
  serviceTypes(
    page: Int
    limit: Int
    params: ServiceTypeSearch
  ): ServiceTypeCollection

  """
  Return tags
  """
  tags(id: ID!, page: Int, limit: Int): TagCollection

  """
  Return teams avaiable to company
  """
  teamsByScope(
    id: ID!
    page: Int
    limit: Int
    params: TeamSearch
  ): TeamCollection

  """
  Returns all vulnerabilities the user has access
  """
  vulnerabilities(
    page: Int
    limit: Int
    params: VulnerabilitySearch
    order: OrderOccurrencesParams

    """
    ASC or DESC
    """
    orderType: OrderParams
  ): VulnerabilityCollection

  """
  Returns all vulnerabilities templates by company id
  """
  vulnerabilitiesTemplatesByCompanyId(
    id: ID!
    page: Int
    limit: Int
  ): VulnerabilityTemplateCollection!

  """
  Return the vulnerability if the user has access
  """
  vulnerability(id: ID!): Vulnerability

  """
  Returns all possible vulnerability status
  """
  vulnerabilityStatuses: VulnerabilityStatusesType

  """
  Returns all web vulnerabilities the user has access
  """
  webVulnerabilities(page: Int, limit: Int): VulnerabilityCollection
}

type ResultFiles {
  archive: String
  archiveContentType: String
  archiveFilename: String
  archiveId: String
  archiveSize: Int
  createdAt: ISO8601DateTime!
  deletedAt: ISO8601DateTime!
  id: ID!
  name: String
  portalUserId: ID
  updatedAt: ISO8601DateTime!
}

type SamlIntegration {
  authorizedDomains: [String!]
  createdAt: ISO8601DateTime!
  deletedAt: ISO8601DateTime
  errorsMessage: String
  id: ID!
  integrationType: String
  samlIdpCert: String
  samlIdpEntityId: String
  samlIdpSsoTarget: String
  scopeId: Int
  updatedAt: ISO8601DateTime!
}

type ScheduledProjects {
  client: String
  dueDate: ISO8601DateTime!
  estimatedDays: String!
  estimatedHours: String!
  hoursOrDays: String!
  id: ID!
  label: String!
  pid: String!
  plannedStartedAt: ISO8601DateTime
  projectStatus: String
  projectTypeId: Int!
}

type ServiceType {
  createdAt: ISO8601DateTime!
  id: ID!
  label: String!
  serviceKindType: [String!]
  updatedAt: ISO8601DateTime!
}

type ServiceTypeCollection {
  collection: [ServiceType!]!
  metadata: CollectionMetadata!
}

input ServiceTypeInput {
  id: ID
  contractId: ID
  serviceTypeId: Int!
  licenceAmountType: String!
  licenceAmount: Int!
  durationDays: Int!
}

input ServiceTypeSearch {
  labelEq: String
  labelCont: String
}

type Tag {
  name: String!
}

type TagCollection {
  collection: [Tag!]!
  metadata: CollectionMetadata!
}

type Team {
  analystTeam: Boolean!
  companyId: Int
  createdAt: ISO8601DateTime!
  id: ID!
  label: String!
  slackChannel: String
  updatedAt: ISO8601DateTime!
}

type TeamCollection {
  collection: [Team!]!
  metadata: CollectionMetadata!
}

input TeamSearch {
  """
  Exact search for a label
  """
  labelEq: String

  """
  Search for the content of a label
  """
  labelCont: String
}

"""
Autogenerated input type of UpdateActivityStatusToFinish
"""
input UpdateActivityStatusToFinishInput {
  activityId: Int!
  evidence: String
  evidenceArchive: Upload

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateActivityStatusToFinish
"""
type UpdateActivityStatusToFinishPayload {
  activity: Activity

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
}

"""
Autogenerated input type of UpdateActivityStatusToNotApply
"""
input UpdateActivityStatusToNotApplyInput {
  activityId: Int!
  justify: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateActivityStatusToNotApply
"""
type UpdateActivityStatusToNotApplyPayload {
  activity: Activity

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
}

"""
Autogenerated input type of UpdateActivityStatusToRestart
"""
input UpdateActivityStatusToRestartInput {
  activityId: Int!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateActivityStatusToRestart
"""
type UpdateActivityStatusToRestartPayload {
  activity: Activity

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
}

"""
Autogenerated input type of UpdateActivityStatusToStart
"""
input UpdateActivityStatusToStartInput {
  activityId: Int!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateActivityStatusToStart
"""
type UpdateActivityStatusToStartPayload {
  activity: Activity

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
}

"""
Autogenerated input type of UpdateContract
"""
input UpdateContractInput {
  id: Int!

  """
  Company Id. Set it to indicate the contract owner
  """
  companyId: Int

  """
  Contract description. You must describe important points
  """
  description: String

  """
  Start date. Set it to indicate the initial date
  """
  startedAt: ISO8601Date

  """
  End date. Set it to indicate the end date
  """
  finishedAt: ISO8601Date

  """
  Whether or not the contract has an end date
  """
  noEndDate: Boolean

  """
  List of contacts
  """
  contacts: [ContactTypeInput!]

  """
  List of services
  """
  services: [ServiceTypeInput!]
  resourcesCount: Int
  attachment: Upload
  educationSecret: String
  educationId: Int

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateContract
"""
type UpdateContractPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  msg: [String!]
}

"""
Autogenerated input type of UpdateIntegrationMappedFields
"""
input UpdateIntegrationMappedFieldsInput {
  """
  Mapped Fields
  """
  mappedFields: [IntegrationMappedFieldsInput!]!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateIntegrationMappedFields
"""
type UpdateIntegrationMappedFieldsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
}

"""
Autogenerated input type of UpdateOccurrence
"""
input UpdateOccurrenceInput {
  """
  Occurrence ID
  """
  id: ID!

  """
  Affected component id
  """
  affectedComponentId: Int

  """
  Project id
  """
  projectId: Int

  """
  Code review code
  """
  codeReviewCode: String

  """
  Code review input data
  """
  codeReviewInputData: String

  """
  Code review output data
  """
  codeReviewOutputData: String

  """
  Code review vector
  """
  codeReviewVector: String

  """
  Company id
  """
  companyId: Int

  """
  Company name
  """
  companyName: String

  """
  Severity
  """
  criticity: String

  """
  Deploy id
  """
  deployId: Int

  """
  External vid
  """
  externalVid: String

  """
  Failure type
  """
  failureType: String

  """
  Impact
  """
  impact: String

  """
  Impact resume
  """
  impactResume: String

  """
  Invaded
  """
  invaded: Boolean

  """
  Invaded environment description
  """
  invadedEnvironmentDescription: String

  """
  Other host
  """
  othersHost: String

  """
  Others protocol
  """
  othersProtocol: String

  """
  Others steps
  """
  othersSteps: String

  """
  Others vector
  """
  othersVector: String

  """
  Probability
  """
  probability: String

  """
  Title
  """
  title: String

  """
  Vid
  """
  vid: String

  """
  Web method
  """
  webMethod: String

  """
  Web parameters
  """
  webParameters: String

  """
  Web protocol
  """
  webProtocol: String

  """
  Web request
  """
  webRequest: String

  """
  Web response
  """
  webResponse: String

  """
  Web steps
  """
  webSteps: String

  """
  Web url
  """
  webUrl: String

  """
  Author_id
  """
  authorId: Int

  """
  Vulnerability template id
  """
  vulnerabilityTemplateId: Int

  """
  Vulnerability status
  """
  vulnerabilityStatus: String

  """
  Change status attributes
  """
  changeStatusAttributes: UpdateOccurrenceStatus

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateOccurrence
"""
type UpdateOccurrencePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  msg: [String!]
}

input UpdateOccurrenceStatus {
  """
  Comment
  """
  comment: String

  """
  Deploy id
  """
  deployId: String

  """
  Evidences attributes
  """
  evidencesAttributes: [NewEvidence!]

  """
  Status
  """
  status: String!
}

"""
Autogenerated input type of UpdateProject
"""
input UpdateProjectInput {
  id: ID!
  assetsIds: [Int!]
  companyId: Int!
  startDate: ISO8601Date
  connectivity: String
  credentialsIds: [Int!]
  estimatedHours: String
  label: String!
  negativeScope: String
  goal: String!
  playbooksIds: [Int!]!
  scope: String!
  students: Int
  tags: [String!]
  teamsIds: [Int!]
  typeId: Int!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateProject
"""
type UpdateProjectPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  msg: [String!]
}

"""
Autogenerated input type of UpdateSamlIntegration
"""
input UpdateSamlIntegrationInput {
  id: Int!
  samlIdpSsoTarget: String!
  samlIdpEntityId: String!
  samlIdpCert: String!
  authorizedDomains: [String!]!
  scopeId: Int!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateSamlIntegration
"""
type UpdateSamlIntegrationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  integration: SamlIntegration!
}

scalar Upload

type Vulnerability {
  affectedComponentId: Int
  author: PortalUser
  codeReviewCode: String
  codeReviewInputData: String
  codeReviewOutputData: String
  codeReviewVector: String
  commitmentAt: ISO8601DateTime
  companyId: Int
  companyName: String
  createdAt: ISO8601DateTime!
  criticity: String
  customMetadata: VulnerabilityCollection
  deployId: Int
  description: String
  evidences: [Evidence!]!
  externalVid: String
  failureType: String
  history: [History!]!
  id: ID!
  impact: String
  impactResume: String
  invaded: Boolean
  invadedEnvironmentDescription: String
  legacyId: String
  othersHost: String
  othersProtocol: String
  othersSteps: String
  othersVector: String
  probability: String
  projectId: Int
  title: String
  updatedAt: ISO8601DateTime!
  vid: String
  vulnerabilityStatus: String
  vulnerabilityStatuses: [[String!]!]
  vulnerabilityTemplate: VulnerabilityTemplate!
  webMethod: String
  webParameters: String
  webProtocol: String
  webRequest: String
  webResponse: String
  webSteps: String
  webUrl: String
}

type VulnerabilityCollection {
  collection: [Vulnerability!]!
  metadata: OccurrenceMeta!
}

input VulnerabilitySearch {
  criticityCont: String
  criticityEq: String
  descriptionCont: String
  descriptionEq: String
  vidCont: String
  vidEq: String

  """
  Search Vulnerability Title
  """
  vulnerabilityModelTitleCont: String
  vulnerabilityModelTitleEq: String
}

type VulnerabilityStatusesType {
  statuses: [String!]!
}

type VulnerabilityTemplate {
  categoryList: String
  companyId: Int
  createdAt: ISO8601DateTime!
  criticity: String
  deletedAt: ISO8601DateTime
  description: String
  id: ID!
  impact: String
  impactResume: String
  notification: Boolean
  oldId: Int
  patternList: String
  probability: String
  reference: String
  solution: String
  title: String
  updatedAt: ISO8601DateTime!
}

type VulnerabilityTemplateCollection {
  collection: [VulnerabilityTemplate!]!
  metadata: CollectionMetadata!
}
